#------------------------------------------------#
#                                                #
#      ████████╗███╗   ███╗██╗   ██╗██╗  ██╗     #
#      ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝     #
#         ██║   ██╔████╔██║██║   ██║ ╚███╔╝      #
#         ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗      #
#         ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗     #
#         ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝     #
#------------------------------------------------#


#------------------------------------------------#
# ------------------- Base Configs --------------#
#------------------------------------------------#

set -g status on
set -g mouse on # Enable mouse control (clickable windows, panes, resizable panes)

# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
set -g default-terminal "tmux-256color"
# set -as terminal-overrides ",xterm*:Tc" all tmux versions
set -as terminal-features ",xterm*:RGB" # tmux >=3.2

set -g history-limit 10000 # Set scrollback buffer to 10000
set -g base-index 1
set -g renumber-windows on
set -g set-titles on
set -g set-titles-string "#S / #W"
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g pane-border-line heavy #  single, double, heavy, simple, number
set -g pane-border-style "fg=#6B6B6B bg=default"
set -g pane-active-border-style "fg=color22 bg=default"
set -g base-index 1 # Base tab index
set -s escape-time 0

set -s set-clipboard on

setw -g mode-keys vi
setw -g pane-base-index 1
setw -g aggressive-resize on

set-option -g status-position top
set-option -g focus-events on

# Automatically rename tmux window based on current pane path
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Images rendering
set -gq allow-passthrough on
set -g visual-activity off

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

#-----------------------------------------------#
# ------------------- Key Mappings -------------#
#-----------------------------------------------#

# reload config file (change file location to your the tmux.conf you want to use)
unbind r
bind r source-file ~/.tmux.conf

# change tmux prefix
set -g prefix C-f
unbind C-b
bind C-f send-prefix

bind-key "\\" split-window -h -c "#{pane_current_path}"
bind-key "|" split-window -v -c "#{pane_current_path}"

unbind '"'
unbind %

#bind c new-window -c "#{pane_current_path}"

# new window with prompt to name
bind-key c command-prompt -p "window name:" "new-window -c \"#{pane_current_path}\"; rename-window '%%'"

# Size panels
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -R 10
bind h resize-pane -L 10

bind -r m resize-pane -Z

bind C-l send-keys 'C-l' # Restoring Clear Screen (C-l)
#bind C-\\ send-keys "C-\" # Restoring SIGQUIT (C-\)

# Vim style pane selection
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Shift arrow to switch windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window

# [ switch-client -l ] toggling between two sessions, like Alt-Tab
# [ last-window ] toggle between two window
# [ last-pane ] toggle between last active pane

bind Space last-window
# bind P last-pane

bind-key x kill-pane

# --------------- custom popup --------------
#bind-key p display-popup -E sh -c tmux attach -t popup_terminal || (tmux new-session -d -s popup_terminal -c $(echo "$PWD") && tmux attach -t popup_terminal)
#bind -n C-g display-popup -E sh -c "cd pwd"

#bind-key p run-shell '~/dotfiles/bin/tmux/popup-tmux.sh zsh'

# for splits
bind-key o run-shell '~/dotfiles/bin/tmux/popup-tmux-args.sh $(tmux display-message -p -F "#{session_name}")'

# tmux popup per parent session
bind-key p run-shell '~/dotfiles/bin/tmux/popup-tmux-args.sh $(tmux display-message -p -F "#{session_name}") float'

# tmux global popup across all sessions
bind-key g run-shell '~/dotfiles/bin/tmux/popup-tmux-args.sh global float'

#bind-key l run-shell '~/dotfiles/bin/tmux/connect-to-prev-visited-session.sh'
bind-key l switch-client -l

#-----------------------------------------------#
# ------------------- Tmux Plugins -------------#
#-----------------------------------------------#
# ------------https://github.com/tmux-plugins/tpm

set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'sergii-dudar/tmux-powerline' # my fork of erikw/tmux-powerline with personal customizations
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

#-----------------------------------------------#
# ------------------- Plugins Configs ----------#
#-----------------------------------------------#

# --------- tmux-resurrect/continuum ---------- #
# ---- prefix + Ctrl-s - save
# ---- prefix + Ctrl-r - restore

set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# ------------------- sesh ---------------------#
unbind t
bind-key "t" run-shell "~/dotfiles/zsh/serhii.shell/util/sesh.sessions.sh &"
# bind-key "T" display-popup -E -w 40% "sesh connect \"$(
#   sesh list -i | gum filter --limit 1 --fuzzy --no-sort --placeholder 'Pick a tmux sesh' --prompt='⚡'
# )\""
#bind -N "last-session (via sesh) " "l" run-shell "sesh last" # jump to prev session - replaced with custom command above

#-----------------------------------------------#
# --------------------- tpm/tpm ----------------#
#-----------------------------------------------#

run '~/.tmux/plugins/tpm/tpm'
# install: prefix + I
# update: prefix + U
# uninstall removed\commented: prefix + alt + u