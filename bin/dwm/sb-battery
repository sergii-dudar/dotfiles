#!/usr/bin/env bash
# Display the current battery status.

notify() {
    notify-send \
        --icon=battery-good-symbolic \
        --expire-time=4000 \
        --hint=string:x-canonical-private-synchronous:battery \
        "Battery" "$1"
}

case "$BLOCK_BUTTON" in
    1) notify "$(acpi -b | awk -F ': |, ' '{printf "%s\n%s\n", $2, $4}')" ;;
    3) ghostty -e "$EDITOR" "$0" ;;
esac

. "$HOME"/dotfiles/bin/dwm/colorscheme

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?*; do
    # If non-first battery, print a space separator.
    [ -n "${capacity+x}" ] && printf " "

    capacity="$(cat "$battery/capacity" 2>&1)"
    if [ "$capacity" -gt 90 ]; then
        status=" "
        icon_fg="#a6d189"
    elif [ "$capacity" -gt 60 ]; then
        status=" "
        icon_fg="#f1fa8c"
    elif [ "$capacity" -gt 40 ]; then
        status=" "
        icon_fg="#ef9f76"
    elif [ "$capacity" -gt 10 ]; then
        status=" "
        icon_fg="#e78284"
    else
        status=" "
        icon_fg="#ff5555"
    fi

    case "$(cat "$battery/status" 2>&1)" in
            # Full) status=" " ;;
        Full) status=" " ;;
        Discharging)
            if [ "$capacity" -le 20 ]; then
                status="$status"
            fi
            ;;
        Charging) status="󰚥$status" ;;
            # "Not charging") status=" " ;;
        "Not charging") status=" " ;;
        Unknown) status="?$status" ;;
        *) exit 1 ;;
    esac

    echo "^c$icon_fg^$status ^c$FG_COLOR^$capacity%$SPLIT"
done